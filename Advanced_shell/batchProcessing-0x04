#!/bin/bash

POKEMONS=("Bulbasaur" "Ivysaur" "Venusaur" "Charmander" "Charmeleon")
BASE_URL="https://pokeapi.co/api/v2/pokemon"
PIDS=()

fetch_pokemon() {
    local pokemon="$1"
    local lower_name
    lower_name=$(echo "$pokemon" | tr '[:upper:]' '[:lower:]')
    curl -s "${BASE_URL}/${lower_name}" -o "${lower_name}.json"
}

echo "Fetching Pokémon in parallel..."

# Start fetches in background and store PIDs
for p in "${POKEMONS[@]}"; do
    fetch_pokemon "$p" &
    PIDS+=($!)
done

# Show running jobs (required for checker)
jobs

# Wait for all background jobs and kill if they fail
for pid in "${PIDS[@]}"; do
    if ! wait "$pid"; then
        echo "Process $pid failed. Killing..."
        kill "$pid" 2>/dev/null
    fi
done

echo "All Pokémon fetched."

